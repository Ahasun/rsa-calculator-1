{"version":3,"sources":["images/banner.png","components/Navbar/Navbar.js","components/Header/Header.js","StateProvider.js","components/Main/PQForms.js","components/Main/EForm.js","components/Main/EncryptOrDecrypt.js","components/Main/Main.js","components/Footer/Footer.js","App.js","serviceWorker.js","Reducer.js","index.js"],"names":["module","exports","Navbar","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","onClick","window","location","reload","Banner","require","Header","Paper","elevation","style","background","component","gutterBottom","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","PQForms","dispatch","pValue","useRef","qValue","submit","useCallback","current","length","type","item","p","q","Grid","container","spacing","xs","FormControl","fullWidth","TextField","id","inputRef","label","justify","EForm","n","phi","evalue","e","EncryptOrDecrypt","d","cipher","message","cipherInNumeric","messageInNumeric","messageInput","cipherInput","cipherAsNumericInput","encryptMessage","decryptCipher","decryptCipherFromNumeric","textAlign","multiline","rows","rowsMax","aria-readonly","marginTop","marginBottom","Main","errorbag","useState","hasError","setHasError","handleSnackbarOpen","handleSnackbarClose","useEffect","Container","fixed","Snackbar","open","onClose","Alert","severity","map","error","key","Footer","App","Boolean","hostname","match","rando","power","a","b","BigInt","res","millerTest","checkPrime","i","state","action","toString","gcd","m","NaN","s","push","x","y","modInverse","character","charCodeAt","encrypted","String","fromCharCode","originalMessage","decrypted","cipherAsNumeric","forEach","split","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.e5ba2984.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner.bcd1ca26.png\";","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const reload = () => {\r\n    window.location.reload();\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className=\"navbar__icon\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className=\"navbar__title\">\r\n            RSA Calculator\r\n          </Typography>\r\n          <Button color=\"inherit\" onClick={reload}>\r\n            Reset\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport \"./Header.css\";\r\nconst Banner = require(\"../../images/banner.png\");\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <Paper\r\n        className=\"header__background\"\r\n        elevation={0}\r\n        style={{\r\n          background:\r\n            \"linear-gradient(rgba(0, 0, 0, 0.5),rgba(0, 0, 0, 0.5)),url('\" +\r\n            Banner +\r\n            \"') no-repeat center center fixed\",\r\n        }}\r\n      >\r\n        <div className=\"header__bannerText\">\r\n          <Typography variant=\"h2\" component=\"h2\" gutterBottom>\r\n            RSA Calculator\r\n          </Typography>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            A program for calculating rsa algorithm and thus encrypting and\r\n            decrypting the messages\r\n          </Typography>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","// Setup data layer\r\n// We need this to track the changes\r\n\r\nimport React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n// Data layer\r\nexport const StateContext = createContext();\r\n\r\n// build a provider\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import React, { useCallback, useRef } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./PQForms.css\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\n\r\nfunction PQForms() {\r\n  const [, dispatch] = useStateValue();\r\n\r\n  const pValue = useRef();\r\n  const qValue = useRef();\r\n\r\n  const submit = useCallback(() => {\r\n    if (pValue.current.value.length <= 0 || qValue.current.value.length <= 0)\r\n      return;\r\n\r\n    dispatch({\r\n      type: \"SET_P_AND_Q\",\r\n      item: {\r\n        p: pValue.current.value,\r\n        q: qValue.current.value,\r\n      },\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Paper elevation={2} className=\"pqforms__container\">\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Enter two prime number <em>P</em> and <em>Q</em>, such that{\" \"}\r\n        <em>P * Q</em> is greater than 127.\r\n      </Typography>\r\n      <div className=\"pqforms__form\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <FormControl\r\n              fullWidth\r\n              className=\"pqforms__formControl\"\r\n              variant=\"outlined\"\r\n            >\r\n              <TextField\r\n                id=\"outlined-p-value\"\r\n                type=\"number\"\r\n                inputRef={pValue}\r\n                variant=\"outlined\"\r\n                label=\"Enter a prime number, P\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl\r\n              fullWidth\r\n              className=\"pqforms__formControl\"\r\n              variant=\"outlined\"\r\n            >\r\n              <TextField\r\n                id=\"outlined-q-value\"\r\n                type=\"number\"\r\n                inputRef={qValue}\r\n                variant=\"outlined\"\r\n                label=\"Enter a prime number, Q\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Grid container justify=\"center\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"pqforms__button\"\r\n          onClick={submit}\r\n        >\r\n          Next\r\n        </Button>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default PQForms;\r\n","import React, { useCallback, useRef } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./EForm.css\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\n\r\nfunction EForm() {\r\n  const [{ n, phi }, dispatch] = useStateValue();\r\n\r\n  const evalue = useRef();\r\n\r\n  const submit = useCallback(() => {\r\n    if (evalue.current.value.length <= 0) return;\r\n\r\n    dispatch({\r\n      type: \"SET_E\",\r\n      item: {\r\n        e: evalue.current.value,\r\n      },\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Paper elevation={2} className=\"eform__container\">\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        The value of <em>n</em> is: <strong>{n}</strong>.\r\n      </Typography>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        The value of <em>&phi;(n)</em> is: <strong>{phi}</strong>.\r\n      </Typography>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Enter a public key, <em>e (1 &lt; e &lt; {phi})</em>, such that{\" \"}\r\n        <em>e</em> and <em>{phi}</em> are relatively prime (The <em>gcd</em> of{\" \"}\r\n        <em>e</em> and <em>{phi}</em> is <em>1</em>).\r\n      </Typography>\r\n      <div className=\"eform__form\">\r\n        <FormControl className=\"eform__formControl\" variant=\"outlined\">\r\n          <TextField\r\n            id=\"outlined-p-value\"\r\n            type=\"number\"\r\n            inputRef={evalue}\r\n            variant=\"outlined\"\r\n            label=\"Enter the value of e\"\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"eform__button\"\r\n        onClick={submit}\r\n      >\r\n        Next\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default EForm;\r\n","import React, { useCallback, useRef } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./EncryptOrDecrypt.css\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\n\r\nfunction EncryptOrDecrypt() {\r\n  const [\r\n    { d, e, n, cipher, message, cipherInNumeric, messageInNumeric },\r\n    dispatch,\r\n  ] = useStateValue();\r\n\r\n  const messageInput = useRef();\r\n  const cipherInput = useRef();\r\n  const cipherAsNumericInput = useRef();\r\n\r\n  const encryptMessage = useCallback(() => {\r\n    dispatch({\r\n      type: \"Encrypt\",\r\n      item: {\r\n        message: messageInput.current.value,\r\n      },\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const decryptCipher = useCallback(() => {\r\n    dispatch({\r\n      type: \"Decrypt\",\r\n      item: {\r\n        cipher: cipherInput.current.value,\r\n      },\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const decryptCipherFromNumeric = useCallback(() => {\r\n    dispatch({\r\n      type: \"DecryptFromNumericCipher\",\r\n      item: {\r\n        cipher: cipherAsNumericInput.current.value,\r\n      },\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Paper elevation={2} className=\"encryptOrDecrypt__container\">\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          The private key, <em>d</em> is: <strong>{d}</strong>.\r\n        </Typography>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          So, public key pair, <em>(e, n)</em> is:{\" \"}\r\n          <strong>\r\n            ({e}, {n})\r\n          </strong>\r\n        </Typography>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          So, private key pair, <em>(d, n)</em> is:{\" \"}\r\n          <strong>\r\n            ({d}, {n})\r\n          </strong>\r\n        </Typography>\r\n      </div>\r\n      <Typography variant=\"h5\" gutterBottom>\r\n        Enter a message to encrypt\r\n      </Typography>\r\n      <div className=\"encryptOrDecrypt__form\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <FormControl\r\n              fullWidth\r\n              className=\"encryptOrDecrypt__formControl\"\r\n              variant=\"outlined\"\r\n            >\r\n              <TextField\r\n                inputRef={messageInput}\r\n                multiline={true}\r\n                rows={5}\r\n                rowsMax={5}\r\n                variant=\"outlined\"\r\n                label=\"Enter a message to encrypt\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl\r\n              fullWidth\r\n              className=\"encryptOrDecrypt__formControl\"\r\n              variant=\"outlined\"\r\n            >\r\n              <TextField\r\n                multiline={true}\r\n                rows={5}\r\n                rowsMax={5}\r\n                variant=\"outlined\"\r\n                value={cipher}\r\n                label=\"Encrypted text in cipher\"\r\n                aria-readonly\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <FormControl\r\n          fullWidth\r\n          style={{ marginTop: \"16px\" }}\r\n          className=\"encryptOrDecrypt__formControl\"\r\n          variant=\"outlined\"\r\n        >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            value={cipherInNumeric}\r\n            label=\"Encrypted text in numeric value\"\r\n            aria-readonly\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"encryptOrDecrypt__button\"\r\n        onClick={encryptMessage}\r\n      >\r\n        Encrypt\r\n      </Button>\r\n      <Typography variant=\"h5\" gutterBottom style={{ marginTop: \"32px\" }}>\r\n        Enter cipher text to decrypt the message\r\n      </Typography>\r\n      <div className=\"encryptOrDecrypt__form\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={9}>\r\n            <FormControl\r\n              fullWidth\r\n              style={{ marginBottom: \"16px\" }}\r\n              className=\"encryptOrDecrypt__formControl\"\r\n              variant=\"outlined\"\r\n            >\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Decrypt using numeric value\"\r\n                inputRef={cipherAsNumericInput}\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\"encryptOrDecrypt__button\"\r\n              onClick={decryptCipherFromNumeric}\r\n            >\r\n              Decrypt\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        or,\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <FormControl\r\n              fullWidth\r\n              className=\"encryptOrDecrypt__formControl\"\r\n              variant=\"outlined\"\r\n            >\r\n              <TextField\r\n                id=\"outlined-p-value\"\r\n                type=\"number\"\r\n                inputRef={cipherInput}\r\n                multiline={true}\r\n                rows={5}\r\n                rowsMax={5}\r\n                variant=\"outlined\"\r\n                label=\"Enter the cipher text to decrypt the message\"\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl\r\n              fullWidth\r\n              className=\"encryptOrDecrypt__formControl\"\r\n              variant=\"outlined\"\r\n            >\r\n              <TextField\r\n                multiline={true}\r\n                rows={5}\r\n                rowsMax={5}\r\n                variant=\"outlined\"\r\n                value={message}\r\n                label=\"Decrypted message\"\r\n                aria-readonly\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <FormControl\r\n          fullWidth\r\n          style={{ marginTop: \"16px\" }}\r\n          className=\"encryptOrDecrypt__formControl\"\r\n          variant=\"outlined\"\r\n        >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            value={messageInNumeric}\r\n            label=\"Decrypted text in numeric value\"\r\n            aria-readonly\r\n          />\r\n        </FormControl>\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className=\"encryptOrDecrypt__button\"\r\n        onClick={decryptCipher}\r\n      >\r\n        Decrypt\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default EncryptOrDecrypt;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport \"./Main.css\";\r\nimport PQForms from \"./PQForms\";\r\nimport EForm from \"./EForm\";\r\nimport { useStateValue } from \"../../StateProvider\";\r\nimport EncryptOrDecrypt from \"./EncryptOrDecrypt\";\r\n\r\nfunction Main() {\r\n  const [{ errorbag }] = useStateValue();\r\n\r\n  const [hasError, setHasError] = useState(true);\r\n\r\n  const handleSnackbarOpen = useCallback(() => {\r\n    setHasError(true);\r\n  }, [setHasError]);\r\n\r\n  const handleSnackbarClose = useCallback(() => {\r\n    setHasError(false);\r\n  }, [setHasError]);\r\n\r\n  useEffect(() => {\r\n    if (errorbag.length > 0) {\r\n      handleSnackbarOpen();\r\n    } else {\r\n      handleSnackbarClose();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <Container fixed>\r\n        <PQForms />\r\n        <EForm />\r\n        <EncryptOrDecrypt />\r\n      </Container>\r\n      <Snackbar open={hasError} onClose={handleSnackbarClose}>\r\n        <Alert onClose={handleSnackbarClose} severity=\"error\">\r\n          {errorbag?.map((error) => (\r\n            <li key={error.message}>{error.message}</li>\r\n          ))}\r\n        </Alert>\r\n      </Snackbar>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer__copyrightNotice\">\r\n        Developed by Ahasanul Kader Chy. &copy; All rights reserved.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Main from \"./components/Main/Main\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Navbar />\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","/* global BigInt */\r\n\r\nconst randojs = require(\"@nastyox/rando.js\");\r\nconst rando = randojs.rando;\r\n\r\nexport const initialState = {\r\n  p: \"0\",\r\n  q: \"0\",\r\n  n: \"0\",\r\n  phi: \"0\",\r\n  e: \"0\",\r\n  d: \"0\",\r\n  cipher: \"\",\r\n  message: \"\",\r\n  cipherInNumeric: [],\r\n  messageInNumeric: [],\r\n  errorbag: [],\r\n};\r\n\r\nconst power = (a, b, n) => {\r\n  [a, b, n] = [BigInt(a), BigInt(b), BigInt(n)];\r\n  let res = BigInt(1);\r\n  a %= n;\r\n  while (b > BigInt(0)) {\r\n    if (b & BigInt(1)) res = (res * a) % n;\r\n    b >>= BigInt(1);\r\n    a = (a * a) % n;\r\n  }\r\n  return res;\r\n};\r\n\r\nfunction modInverse(a, m) {\r\n  [a, m] = [BigInt(a), BigInt(m)];\r\n\r\n  a = ((a % m) + m) % m;\r\n  if (!a || m < BigInt(2)) {\r\n    return NaN; // invalid input\r\n  }\r\n  // find the gcd\r\n  const s = [];\r\n  let b = m;\r\n  while (b) {\r\n    [a, b] = [b, a % b];\r\n    s.push({ a, b });\r\n  }\r\n  if (a !== BigInt(1)) {\r\n    return NaN; // inverse does not exists\r\n  }\r\n  // find the inverse\r\n  let x = BigInt(1);\r\n  let y = BigInt(0);\r\n  for (let i = s.length - 2; i >= 0; --i) {\r\n    [x, y] = [y, x - y * (s[i].a / s[i].b)];\r\n  }\r\n  return ((y % m) + m) % m;\r\n}\r\n\r\nconst millerTest = (d, n) => {\r\n  [d, n] = [BigInt(d), BigInt(n)];\r\n  const a =\r\n    BigInt(2) +\r\n    (BigInt(rando(100000000, 10000000000000000000000)) % (n - BigInt(4)));\r\n  let p = power(a, d, n);\r\n  if (p === BigInt(1) || p === n - BigInt(1)) return true;\r\n\r\n  while (d !== n - BigInt(1)) {\r\n    p = (p * p) % n;\r\n    d *= BigInt(2);\r\n\r\n    if (p === BigInt(1)) return false;\r\n\r\n    if (p === n - BigInt(1)) return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst checkPrime = (n) => {\r\n  n = BigInt(n);\r\n\r\n  if (n <= BigInt(1) || n === BigInt(4)) return false;\r\n  if (n <= BigInt(3)) return true;\r\n  let d = n - BigInt(1);\r\n\r\n  while (d % BigInt(2) === BigInt(0)) d /= BigInt(2);\r\n  for (var i = 0; i < 2000; ++i) {\r\n    if (!millerTest(d, n)) return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst gcd = (a, b) => {\r\n  [a, b] = [BigInt(a), BigInt(b)];\r\n  if (a === BigInt(0)) return b;\r\n  if (b === BigInt(0)) return a;\r\n  return gcd(b, a % b);\r\n};\r\n\r\nconst encryptMessage = (message, e, n, phi) => {\r\n  [e, n] = [BigInt(e), BigInt(n)];\r\n\r\n  if (e <= BigInt(1) || e >= BigInt(phi)) return \"\";\r\n  if (n <= BigInt(127)) return \"\";\r\n\r\n  const cipher = [];\r\n\r\n  for (var i = 0; i < message.length; ++i) {\r\n    const character = BigInt(message.charCodeAt(i));\r\n    const encrypted = power(character, e, n);\r\n    cipher.push(encrypted.toString());\r\n  }\r\n  return cipher;\r\n};\r\n\r\nconst decryptCipher = (cipher, d, n) => {\r\n  [d, n] = [BigInt(d), BigInt(n)];\r\n\r\n  if (d <= BigInt(0)) return \"\";\r\n  if (n <= BigInt(127)) return \"\";\r\n\r\n  const originalMessage = [];\r\n\r\n  for (var i = 0; i < cipher.length; ++i) {\r\n    const character = BigInt(cipher.charCodeAt(i));\r\n    const decrypted = power(character, d, n);\r\n    originalMessage.push(decrypted.toString());\r\n  }\r\n  return originalMessage;\r\n};\r\n\r\nconst decryptCipherFromNumeric = (cipherAsNumeric, d, n) => {\r\n  [d, n] = [BigInt(d), BigInt(n)];\r\n\r\n  if (d <= BigInt(0)) return \"\";\r\n  if (n <= BigInt(127)) return \"\";\r\n\r\n  const originalMessage = [];\r\n\r\n  cipherAsNumeric.forEach((character) => {\r\n    const decrypted = power(character, d, n);\r\n    originalMessage.push(decrypted.toString());\r\n  });\r\n\r\n  return originalMessage;\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_P_AND_Q\": {\r\n      const p = BigInt(action.item.p);\r\n      const q = BigInt(action.item.q);\r\n      if (!checkPrime(p) || !checkPrime(q)) {\r\n        return {\r\n          ...state,\r\n          errorbag: [{ message: \"P and Q should be prime numbers.\" }],\r\n        };\r\n      }\r\n      if (p * q <= 127) {\r\n        return {\r\n          ...state,\r\n          errorbag: [{ message: \"P * Q is less than 127.\" }],\r\n        };\r\n      }\r\n      const n = p * q;\r\n      const phi = (p - BigInt(1)) * (q - BigInt(1));\r\n      return {\r\n        ...state,\r\n        p: p.toString(),\r\n        q: q.toString(),\r\n        n: n.toString(),\r\n        phi: phi.toString(),\r\n        errorbag: [],\r\n      };\r\n    }\r\n    case \"SET_E\": {\r\n      const e = BigInt(action.item.e);\r\n\r\n      if (e <= 1 || e >= BigInt(state.phi)) {\r\n        return {\r\n          ...state,\r\n          errorbag: [\r\n            { message: \"e must be greater than 1 and less than phi.\" },\r\n          ],\r\n        };\r\n      }\r\n\r\n      if (gcd(e, state.phi) !== BigInt(1)) {\r\n        return {\r\n          ...state,\r\n          errorbag: [{ message: \"The gcd of e and phi is not 1.\" }],\r\n        };\r\n      }\r\n\r\n      const d = BigInt(modInverse(e, state.phi));\r\n\r\n      return {\r\n        ...state,\r\n        e: e.toString(),\r\n        d: d.toString(),\r\n        errorbag: [],\r\n      };\r\n    }\r\n    case \"Encrypt\": {\r\n      const message = action.item.message;\r\n      const cipherInNumeric = encryptMessage(\r\n        message,\r\n        state.e,\r\n        state.n,\r\n        state.phi\r\n      );\r\n\r\n      const cipher = String.fromCharCode(...cipherInNumeric);\r\n\r\n      return {\r\n        ...state,\r\n        cipher,\r\n        cipherInNumeric,\r\n        errorbag: [],\r\n      };\r\n    }\r\n    case \"Decrypt\": {\r\n      const cipher = action.item.cipher;\r\n      const messageInNumeric = decryptCipher(cipher, state.d, state.n);\r\n\r\n      const message = String.fromCharCode(...messageInNumeric);\r\n\r\n      return {\r\n        ...state,\r\n        message,\r\n        messageInNumeric,\r\n        errorbag: [],\r\n      };\r\n    }\r\n    case \"DecryptFromNumericCipher\": {\r\n      const cipherAsNumeric = action.item.cipher.split(\",\");\r\n      const messageInNumeric = decryptCipherFromNumeric(\r\n        cipherAsNumeric,\r\n        state.d,\r\n        state.n\r\n      );\r\n\r\n      const message = String.fromCharCode(...messageInNumeric);\r\n\r\n      return {\r\n        ...state,\r\n        message,\r\n        messageInNumeric,\r\n        errorbag: [],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { StateProvider } from \"./StateProvider\";\r\nimport reducer, { initialState } from \"./Reducer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <StateProvider initialState={initialState} reducer={reducer}>\r\n      <App />\r\n    </StateProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}